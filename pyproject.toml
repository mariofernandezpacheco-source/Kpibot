[tool.poetry]
name = "PIBOT"
version = "0.1.0"
description = ""
authors = ["Mario Fernández-Pacheco"]
readme = "README.md"
package-mode = false   # ⬅️ añade esto

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

# Núcleo data/ML
pandas = ">=2.1,<3.0"
numpy = ">=1.24,<2.0"
scikit-learn = ">=1.3,<2.0"
xgboost = ">=2.0,<3.0"
mlflow = ">=2.10,<3.0"
pyarrow = ">=14,<18"
pydantic-settings = ">=2.2,<3.0"
PyYAML = ">=6.0,<7.0"
pandera = ">=0.16,<1.0"
ta = ">=0.11,<0.12"
pandas-market-calendars = ">=4.3,<5.0"
joblib = ">=1.3,<2.0"
rich = ">=13,<14"
matplotlib = ">=3.8,<3.12"  # rango realista

# Opcionales (activables vía extras)
ib-insync = {version = ">=0.9,<1.0", optional = true}
plotly = {version = ">=5.15,<6.0", optional = true}
streamlit = {version = ">=1.30,<2.0", optional = true}
lightgbm = {version = ">=4.0,<5.0", optional = true}
optuna = {version = ">=3.5,<4.0", optional = true}
shap = {version = ">=0.44,<1.0", optional = true}
SQLAlchemy = {version = ">=2.0,<3.0", optional = true}
numba = {version = ">=0.59,<0.60", optional = true}

[tool.poetry.extras]
ibkr = ["ib-insync"]
viz = ["plotly", "streamlit"]
research = ["lightgbm", "optuna", "shap"]
db = ["SQLAlchemy"]
fast = ["numba"]

[tool.poetry.group.dev.dependencies]
pytest = ">=8.0,<9.0"
pytest-cov = ">=5.0,<6.0"
black = ">=24.0.0,<25.0.0"
ruff = "^0.6.9"
pre-commit = "^3.8.0"
mypy = ">=1.8,<2.0"
jupyter = ">=1.0,<2.0"
types-PyYAML = ">=6.0,<7.0"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]
# arreglos automáticos (ahora dentro de la tabla correcta)
fixable = ["ALL"]
unfixable = []

# Si quieres que Ruff también formatee, podrías configurar [tool.ruff.format],
# pero como ya usas Black, puedes omitirlo:
# [tool.ruff.format]
# (vacío o eliminar la sección)


[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q --disable-warnings"
pythonpath = ["."]

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_source = "commit"
branch = "main"
upload_to_pypi = false
changelog_file = "CHANGELOG.md"
build_command = "poetry build"
commit_author = "semantic-release-bot <bot@users.noreply.github.com>"
version_variables = ["pyproject.toml:tool.poetry.version"]
